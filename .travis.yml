language: python
python:
  - 3.7

# set env variables
env:
  global:
    - CC_TEST_REPORTER_ID=7480d2f352fab22db6389c78704029a7c3b1b996e55f70afbb2f454c0de0a64d


install:
  - if [[ ! -d $HOME/miniconda/bin/ || $TRAVIS_EVENT_TYPE =~ cron ]];
    then
      rm -rf $HOME/miniconda;
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda update -q conda;

      conda info -a;
      conda config --add channels defaults;
      conda config --add channels conda-forge;
      conda config --add channels bioconda;

      conda env create -f environment.yml;
      source activate peaksql;
      conda install coverage;
    else
      export PATH="$HOME/miniconda/bin:$PATH";
    fi

before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build

script:
  - source activate peaksql

  - coverage run -m unittest discover test
  - coverage xml

after_script:
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT --coverage-input-type coverage.py

# speedup the slow build of our environment by caching (mini)conda
cache:
    directories:
     - ${HOME}/miniconda
     
