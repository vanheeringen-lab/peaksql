name: Testing

on: [push]


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7]
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
      fail-fast: false

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - uses: goanpeca/setup-miniconda@v1.0.2
      with:
       activate-environment: peaksql
       environment-file: environment.yml
       python-version: ${{ matrix.python-version }}
       shell: bash -l {0}

    - name: Install coverage
      run: |
        conda install coverage
      shell: bash -l {0}

#     - name: Test & publish code coverage
#       uses: paambaati/codeclimate-action@v2.4.0
#       env:
#         CC_TEST_REPORTER_ID: ${{ secrets.CodeClimate }}
#       with:
#         coverageCommand: coverage run -m unittest discover test
#         debug: true


    - uses: marsam/codeclimate-action@master
      with:
        command: coverage run -m unittest discover test
        reporter-id: ${{ secrets.CodeClimate }}

#     - name: Test
#       shell: bash -l {0}
#       run: |
#         coverage run -m unittest discover test
#         coverage xml

#     - name: Report Code Climate
#       env:
#         CC_TEST_REPORTER_ID: ${{secrets.CodeClimate}}
#       run: |
#         export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"
#         curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
#         chmod +x ./cc-test-reporter
#         ./cc-test-reporter after-build --coverage-input-type coverage.py
#       shell: bash -l {0}
