name: Testing

on: [push]


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
        os: ['ubuntu-latest']

    steps:
    - uses: actions/checkout@v2, goanpeca/setup-miniconda@v1.0.2
      with:
       activate-environment: peaksql
       environment-file: environment.yml
       python-version: ${{ matrix.python-version }}
       shell: bash -l {0}

    - name: Install coverage
      run: |
        conda install coverage
      shell: bash -l {0}


#     - name: Test & publish code coverage
#       env:
#         CC_TEST_REPORTER_ID: ${{secrets.CodeCoverage}}
#       shell: bash -l {0}
#       run: |
#         export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"

#         curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
#         chmod +x ./cc-test-reporter
#         ./cc-test-reporter format-coverage -t lcov coverage/lcov.info
#         ./cc-test-reporter upload-coverage

#       coverage run -m unittest discover test
#   - coverage xml

    - name: Test & publish code coverage
      uses: paambaati/codeclimate-action@v2.4.0
      env:
        CC_TEST_REPORTER_ID: ${{secrets.CodeCoverage}}
      with:
        coverageCommand: conda activate peaksql; coverage run -m unittest discover test
        debug: true
        shell: bash -l {0}
