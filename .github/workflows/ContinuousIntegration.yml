name: ContinuousIntegration


on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7]
        os: ['ubuntu-latest', 'macos-latest']
      fail-fast: false

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - uses: goanpeca/setup-miniconda@v1.0.2
      with:
       activate-environment: peaksql
       environment-file: environment.yml
       python-version: ${{ matrix.python-version }}
       auto-update-conda: true

    - name: Install CI related
      shell: pwsh
      run: |
        conda install coverage
    
    - name: Test & publish code coverage
      uses: paambaati/codeclimate-action@v2.4.0
      env:
        CC_TEST_REPORTER_ID: <code_climate_reporter_id>
      with:
        coverageCommand: | 
          conda init powershell
          conda activate peaksql
          conda list
        debug: true

#     - name: Set ENV for codeclimate (pull_request)
#       run: |
#         git fetch --no-tags --prune --depth=1 origin +refs/heads/$GITHUB_HEAD_REF:refs/remotes/origin/$GITHUB_HEAD_REF
#         echo "::set-env name=GIT_BRANCH::$GITHUB_HEAD_REF"
#       if: github.event_name == 'pull_request'

#     - name: Set ENV for codeclimate (push)
#       run: |
#         echo "::set-env name=GIT_BRANCH::$GITHUB_REF"
#       if: github.event_name == 'push'

#     - name: Setup Code Climate code coverage
#       if: matrix.os == 'ubuntu-latest'
#       run: |
#         curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
#         chmod +x ./cc-test-reporter
#         ./cc-test-reporter before-build

#     - name: Test
#       shell: pwsh
#       run: |
#         conda activate miniconda3/envs/peaksql 
#         coverage run -m unittest discover test
#         coverage xml

#     - name: Report Code Climate code coverage  (success)
#       if: matrix.os == 'ubuntu-latest'
#       env:
#         GIT_COMMIT_SHA: ${{ github.sha }}
#         CC_TEST_REPORTER_ID: ${{secrets.CodeClimate}}
#       run: |
#         ./cc-test-reporter after-build --coverage-input-type coverage.py --exit-code 0 --debug
